[project]
name = "orchestr8"
version = "0.0.3"
description = "A versatile collection of independent components crafted to simplify task automation, particularly for AI workflows."
authors = [{ name = "Harsh Verma", email = "synacktra.work@gmail.com" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.9,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "loguru>=0.7.0",
]

[project.urls]
Documentation = "https://synacktraa.github.io/orchestr8/"
Homepage = "https://synacktraa.github.io/orchestr8/"
Repository = "https://github.com/synacktraa/orchestr8"

[project.optional-dependencies]
adapter = [
    "docstring-parser>=0.15",
    "jsonref>=1.1.0",
    "pydantic>=2.0.0,<=2.9.0",
]
execution-runtime = [
    "docker>=7.1.0",
    "packaging>=24.1",
    "uv>=0.5.0",
]
sandbox-client = [
    "docker>=7.1.0",
]
shell = [
    "docker>=7.1.0",
]
all = [
    "docker>=7.1.0",
    "docstring-parser>=0.15",
    "jsonref>=1.1.0",
    "packaging>=24.1",
    "pydantic>=2.0.0,<=2.9.0",
    "uv>=0.5.0",
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.20.0",
    "mypy>=0.991",
    "pytest-cov>=4.0.0",
    "ruff>=0.6.9",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[dependency-groups]
cookbooks = [
    "duckduckgo-search>=6.3.7",
    "ipykernel>=6.29.5",
    "litellm>=1.53.4",
    "requests>=2.32.3",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["orchestr8*"]

[tool.setuptools]
include-package-data = true
package-data = {"orchestr8" = ["**/*.txt"]}

[tool.mypy]
files = ["orchestr8"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = false
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    "TRY002",
    "TRY003",
    "UP006",
    "UP007",
    "UP035",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["orchestr8"]

[tool.deptry]
ignore = ["DEP002", "DEP003", "DEP004"]
